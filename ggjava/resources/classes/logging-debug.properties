# Java logging (java.util.logging)

#################################################
# Global logging properties
#################################################

# list of logging handlers (class names)
handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# default global logging level (may be overriden by loggers and handlers)
.level=INFO

# Loggers (usually attached to packages), with the default level for each,
# overriding the default global level.
com.goldengate.atg.level=FINE
org.level=INFO

#################################################
# Handlers
#################################################

# logging to console
java.util.logging.ConsoleHandler.level=FINE
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter


# logging levels, from no or minimal logging, to verbose logging:
#  * OFF - turn off logging,
#  * SEVERE -> WARNING -> INFO -> CONFIG -> FINE -> FINER -> FINEST
#  * ALL - logging of all messages.
java.util.logging.FileHandler.level=FINE

# Filename placeholders:
#  / pathname separator (all platforms)
#  %t - system temp directory
#  %h - the "user.home" system property
#  %g - generation number for rotating logs {1,2,...}
#  %u - unique number to resolve conflicts
java.util.logging.FileHandler.pattern=dirrpt/log_ggjava_debug_%u.log

# Limiting size of output file in bytes (e.g., 50MB=52428800 bytes):
java.util.logging.FileHandler.limit=52428800

# max output files (appends integer to the base file name)
java.util.logging.FileHandler.count=7

# Style of output (e.g,. java.util.logging.SimpleFormatter or (default)  java.util.logging.XMLFormatter)
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

